{
  "name": "nextn",
  "version": "0.1.0",
  "private": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/kodexalabs/sparks-dev.git"
  },
  "scripts": {
    "dev": "powershell -ExecutionPolicy Bypass -File scripts/enhanced-dev-workflow.ps1 -Interactive",
    "dev:auto": "powershell -ExecutionPolicy Bypass -File scripts/enhanced-dev-workflow.ps1 -Backend auto",
    "dev:firebase": "powershell -ExecutionPolicy Bypass -File scripts/enhanced-dev-workflow.ps1 -Backend firebase",
    "dev:supabase": "powershell -ExecutionPolicy Bypass -File scripts/enhanced-dev-workflow.ps1 -Backend supabase",
    "dev:status": "powershell -ExecutionPolicy Bypass -File scripts/enhanced-dev-workflow.ps1 -Status",
    "dev:setup": "powershell -ExecutionPolicy Bypass -File scripts/enhanced-dev-workflow.ps1 -Setup",
    "dev:next-only": "next dev --turbopack",
    "dev:simple": "next dev --turbopack -p 9002",
    "dev:supabase-oauth": "cross-env NEXT_PUBLIC_DATABASE_PROVIDER=supabase next dev",
    "genkit:dev": "genkit start -- tsx src/ai/dev.ts",
    "genkit:watch": "genkit start -- tsx --watch src/ai/dev.ts",
    "build": "next build",
    "build:firebase": "cross-env NEXT_PUBLIC_DATABASE_PROVIDER=firebase next build",
    "build:supabase": "cross-env NEXT_PUBLIC_DATABASE_PROVIDER=supabase next build",
    "start": "next start",
    "lint": "next lint",
    "typecheck": "tsc --noEmit",
    "setup:firebase": "echo 'Setting up Firebase...' && npm install firebase @genkit-ai/firebase",
    "setup:supabase": "echo 'Setting up Supabase...' && npm install @supabase/supabase-js",
    "test:firebase": "cross-env NEXT_PUBLIC_DATABASE_PROVIDER=firebase npm run test",
    "test:supabase": "cross-env NEXT_PUBLIC_DATABASE_PROVIDER=supabase npm run test",
    "sync:status": "tsx src/lib/sync-cli.ts status",
    "sync:manual": "tsx src/lib/sync-cli.ts sync",
    "sync:analyze": "tsx src/lib/sync-cli.ts analyze",
    "sync:health": "tsx src/lib/sync-cli.ts health",
    "sync:conflicts": "tsx src/lib/sync-cli.ts conflicts",
    "sync:reset": "tsx src/lib/sync-cli.ts reset",
    "sync:help": "tsx src/lib/sync-cli.ts help",
    "backup:create": "tsx src/lib/backup-cli.ts create",
    "backup:list": "tsx src/lib/backup-cli.ts list",
    "backup:preview": "tsx src/lib/backup-cli.ts preview",
    "backup:compare": "tsx src/lib/backup-cli.ts compare",
    "backup:rollback": "tsx src/lib/backup-cli.ts rollback",
    "backup:status": "tsx src/lib/backup-cli.ts current",
    "backup:stats": "tsx src/lib/backup-cli.ts stats",
    "backup:prompt": "tsx src/lib/backup-cli.ts prompt",
    "backup:health": "tsx src/lib/backup-cli.ts health",
    "backup:help": "tsx src/lib/backup-cli.ts help",
    "backup:triggers:start": "node -e \"require('./src/lib/backup-triggers.ts').backupTriggers.startMonitoring()\"",
    "backup:triggers:stop": "node -e \"require('./src/lib/backup-triggers.ts').backupTriggers.stopMonitoring()\"",
    "backup:triggers:check": "node -e \"require('./src/lib/backup-triggers.ts').backupTriggers.checkTriggers()\"",
    "backup:triggers:status": "node -e \"console.log(JSON.stringify(require('./src/lib/backup-triggers.ts').backupTriggers.getStatus(), null, 2))\"",
    "validate:env": "node scripts/validate-env.js",
    "validate:env:db": "node scripts/validate-env.js --db-test",
    "validate:env:quiet": "node scripts/validate-env.js --quiet",
    "firebase:init": "node scripts/firebase-deploy.js init",
    "firebase:deploy": "node scripts/firebase-deploy.js deploy",
    "firebase:deploy:firestore": "node scripts/firebase-deploy.js deploy:firestore",
    "firebase:deploy:storage": "node scripts/firebase-deploy.js deploy:storage",
    "firebase:deploy:hosting": "node scripts/firebase-deploy.js deploy:hosting",
    "firebase:emulators": "node scripts/firebase-deploy.js emulators",
    "firebase:emulators:start": "firebase emulators:start",
    "firebase:emulators:export": "firebase emulators:export ./firebase-export",
    "firebase:emulators:import": "firebase emulators:start --import=./firebase-export"
  },
  "dependencies": {
    "@genkit-ai/firebase": "^1.17.0",
    "@genkit-ai/googleai": "^1.14.1",
    "@genkit-ai/next": "^1.14.1",
    "@google/genai": "^1.15.0",
    "@hookform/resolvers": "^4.1.3",
    "@radix-ui/react-accordion": "^1.2.3",
    "@radix-ui/react-alert-dialog": "^1.1.6",
    "@radix-ui/react-avatar": "^1.1.3",
    "@radix-ui/react-checkbox": "^1.1.4",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-dialog": "^1.1.6",
    "@radix-ui/react-dropdown-menu": "^2.1.6",
    "@radix-ui/react-label": "^2.1.2",
    "@radix-ui/react-menubar": "^1.1.6",
    "@radix-ui/react-popover": "^1.1.6",
    "@radix-ui/react-progress": "^1.1.2",
    "@radix-ui/react-radio-group": "^1.2.3",
    "@radix-ui/react-scroll-area": "^1.2.3",
    "@radix-ui/react-select": "^2.1.6",
    "@radix-ui/react-separator": "^1.1.2",
    "@radix-ui/react-slider": "^1.2.3",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.1.3",
    "@radix-ui/react-tabs": "^1.1.3",
    "@radix-ui/react-toast": "^1.2.6",
    "@radix-ui/react-tooltip": "^1.1.8",
    "@supabase/supabase-js": "^2.55.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "date-fns": "^3.6.0",
    "dotenv": "^16.5.0",
    "embla-carousel-react": "^8.6.0",
    "firebase": "^11.9.1",
    "geist": "^1.3.1",
    "genkit": "^1.14.1",
    "lucide-react": "^0.475.0",
    "next": "15.3.3",
    "patch-package": "^8.0.0",
    "react": "^18.3.1",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.54.2",
    "recharts": "^2.15.1",
    "tailwind-merge": "^3.0.1",
    "tailwindcss-animate": "^1.0.7",
    "zod": "^3.24.2"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@types/vscode": "^1.103.0",
    "cross-env": "^7.0.3",
    "eslint": "9.34.0",
    "eslint-config-next": "15.5.0",
    "genkit-cli": "^1.14.1",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5",
    "vscode": "^1.1.37"
  }
}
